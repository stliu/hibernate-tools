<?xml version="1.0"?>
<!--
  ~ Hibernate, Relational Persistence for Idiomatic Java
  ~
  ~ Copyright (c) 2011, Red Hat Inc. or third-party contributors as
  ~ indicated by the @author tags or express copyright attribution
  ~ statements applied by the authors.  All third-party contributions are
  ~ distributed under license by Red Hat Inc.
  ~
  ~ This copyrighted material is made available to anyone wishing to use, modify,
  ~ copy, or redistribute it subject to the terms and conditions of the GNU
  ~ Lesser General Public License, as published by the Free Software Foundation.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
  ~ or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License
  ~ for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public License
  ~ along with this distribution; if not, write to:
  ~ Free Software Foundation, Inc.
  ~ 51 Franklin Street, Fifth Floor
  ~ Boston, MA  02110-1301  USA
  -->

<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<!-- 

  This mapping demonstrates how to map a many-to-many
  association with a shared attribute in the primary keys
  of the associated entities.
     
-->

<hibernate-mapping
        package="org.hibernate.tool.hbm2x.query">

    <class name="User" table="`User`">
        <composite-id>
            <key-property name="name"/>
            <key-property name="org"/>
        </composite-id>
        <set name="groups" table="UserGroup">
            <key>
                <column name="userName"/>
                <column name="org"/>
            </key>
            <many-to-many class="Group">
                <column name="groupName"/>
                <formula>org</formula>
            </many-to-many>
        </set>
    </class>

    <class name="Group" table="`Group`">
        <composite-id>
            <key-property name="name"/>
            <key-property name="org"/>
        </composite-id>
        <property name="description"/>
        <set name="users" table="UserGroup" inverse="true">
            <key>
                <column name="groupName"/>
                <column name="org"/>
            </key>
            <many-to-many class="User">
                <column name="userName"/>
                <formula>org</formula>
            </many-to-many>
        </set>
    </class>

</hibernate-mapping>
