<?xml version="1.0"?>
<!--
  ~ Hibernate, Relational Persistence for Idiomatic Java
  ~
  ~ Copyright (c) 2011, Red Hat Inc. or third-party contributors as
  ~ indicated by the @author tags or express copyright attribution
  ~ statements applied by the authors.  All third-party contributions are
  ~ distributed under license by Red Hat Inc.
  ~
  ~ This copyrighted material is made available to anyone wishing to use, modify,
  ~ copy, or redistribute it subject to the terms and conditions of the GNU
  ~ Lesser General Public License, as published by the Free Software Foundation.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
  ~ or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License
  ~ for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public License
  ~ along with this distribution; if not, write to:
  ~ Free Software Foundation, Inc.
  ~ 51 Franklin Street, Fifth Floor
  ~ Boston, MA  02110-1301  USA
  -->

<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="org.hibernate.tool.hbm2x">
    <!--


    -->

    <class name="Order" table="CustomerOrder" lazy="true">
        <meta attribute="class-modifier">public strictfp</meta>
        <meta attribute="class-code">// extra code line 1</meta>
        <meta attribute="class-code">// extra code line 2</meta>
        <meta attribute="extra-import" inherit="false">java.text.Collator</meta>
        <meta attribute="class-code" inherit="false">{ Collator.getInstance(); }</meta>
        <synchronize table="LineItem"/>
        <synchronize table="Product"/>

        <composite-id name="id"
                      class="OrderId">
            <key-property name="customerId" length="10" type="string"/>
            <key-property name="orderNumber" type="int"/>
        </composite-id>

        <property name="orderDate"
                  type="calendar_date"
                  not-null="true"/>

        <property name="total" type="big_decimal"
                  formula="( select sum(li.quantity*p.price) from LineItem li, Product p where li.productId = p.productId and li.customerId = customerId and li.orderNumber = orderNumber )"/>

        <many-to-one name="customer"
                     column="customerId"
                     insert="false"
                     update="false"
                     not-null="true" class="Customer"/>

        <bag name="lineItems"
             fetch="join"
             inverse="true"
             cascade="save-update">
            <key>
                <column name="customerId"/>
                <column name="orderNumber"/>
            </key>
            <one-to-many class="LineItem"/>
        </bag>


    </class>

</hibernate-mapping>
