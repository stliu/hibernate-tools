<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Hibernate, Relational Persistence for Idiomatic Java
  ~
  ~ Copyright (c) 2011, Red Hat Inc. or third-party contributors as
  ~ indicated by the @author tags or express copyright attribution
  ~ statements applied by the authors.  All third-party contributions are
  ~ distributed under license by Red Hat Inc.
  ~
  ~ This copyrighted material is made available to anyone wishing to use, modify,
  ~ copy, or redistribute it subject to the terms and conditions of the GNU
  ~ Lesser General Public License, as published by the Free Software Foundation.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
  ~ or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License
  ~ for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public License
  ~ along with this distribution; if not, write to:
  ~ Free Software Foundation, Inc.
  ~ 51 Franklin Street, Fifth Floor
  ~ Boston, MA  02110-1301  USA
  -->

<!DOCTYPE hibernate-reverse-engineering SYSTEM "http://hibernate.sourceforge.net/hibernate-reverse-engineering-3.0.dtd" >

<hibernate-reverse-engineering>

    <type-mapping>
        <sql-type jdbc-type="BINARY" length="1" hibernate-type="boolean"/>
        <sql-type jdbc-type="INTEGER" length="5" hibernate-type="int"/>
        <sql-type jdbc-type="INTEGER" hibernate-type="long"/>
        <sql-type jdbc-type="BIGINT" precision="5" hibernate-type="byte[]"/>
        <sql-type jdbc-type="BIGINT" hibernate-type="java.math.BigInteger"/>
        <sql-type jdbc-type="CHAR" hibernate-type="string"/>

        <!-- start HBX-534 -->
        <sql-type jdbc-type="NUMERIC" precision='10' scale="0" hibernate-type="Long"/>
        <sql-type jdbc-type="NUMERIC" precision='10' hibernate-type="java.lang.Long"/>
        <!-- end HBX-534 -->

        <!--  nullability -->
        <sql-type jdbc-type="FLOAT" scale="17" not-null="true" hibernate-type="nonnull-float"/>
        <sql-type jdbc-type="FLOAT" scale="17" not-null="false" hibernate-type="null-float"/>
        <sql-type jdbc-type="FLOAT" not-null="true" hibernate-type="onlynotnull"/>
        <sql-type jdbc-type="FLOAT" hibernate-type="donotcare"/>


    </type-mapping>

</hibernate-reverse-engineering>